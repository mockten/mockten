name: RELEASE

on:
  workflow_dispatch: {}

jobs:
  release-ecfront:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ecfront2
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        #export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/ecfront/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/ecfront"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-ecpay:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ecpay
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/ecpay/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/ecpay:release-v${SNAPSHOT_VERSION}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-notification:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: notification
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/notification/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/notification:release-v${SNAPSHOT_VERSION}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-payexecution:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: payexecution
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/payexecution/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/payexecution:release-v${SNAPSHOT_VERSION}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-ranking:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ranking
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/ranking/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/ranking:release-v${SNAPSHOT_VERSION}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-searchitem:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: searchitem
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/searchitem"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-adder:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: adder
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/adder/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/adder:release-v${SNAPSHOT_VERSION}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-mongodb:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: mongodb
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/mongodb/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/mongodb:release-v${SNAPSHOT_VERSION}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-uam:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: uam
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        #export SNAPSHOT_VERSION=$(curl -s https://ghcr.io/v2/${{ github.repository_owner }}/uam/tags/list | jq -r '.tags[]' | grep 'snapshot' | cut -d'-' -f2- | sort -Vr | head -n 1)
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/uam"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-apigw:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: apigw
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/apigw"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-minio:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: minIO
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/minio"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-meilisearch:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: meilisearch
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/meilisearch"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-mysql:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: mysql
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/mysql"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-sync:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: sync
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/sync"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  release-redis:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: redis
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push the docker image
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/redis"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG