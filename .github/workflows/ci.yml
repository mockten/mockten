name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build_adder:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'adder/')
    defaults:
      run:
        working-directory: adder
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build
        run: go build -v .

  push_snapshot_container_adder:
    needs: [build_adder]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: adder
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/adder:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_admin:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'admin/')
    defaults:
      run:
        working-directory: admin
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build
        run: go build -v .

  push_snapshot_container_admin:
    needs: [build_admin]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: admin
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/admin:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_ecfront:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'ecfront2/')
    defaults:
      run:
        working-directory: ecfront2
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
  
      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build:dev

  push_snapshot_container_ecfront:
    needs: [build_ecfront]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ecfront2
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/ecfront:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_ecpay:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'ecpay/')
    defaults:
      run:
        working-directory: ecpay
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

    - name: Build
      run: go build -v .

  push_snapshot_container_ecpay:
    needs: [build_ecpay]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ecpay
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/ecpay:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG


  build_notification:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'notification/')
    defaults:
      run:
        working-directory: notification
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v .

  push_snapshot_container_notification:
    needs: [build_notification]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: notification
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/notification:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_payexecution:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'payexecution/')
    defaults:
      run:
        working-directory: payexecution
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

  push_snapshot_container_payexecution:
    needs: [build_payexecution]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: payexecution
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/payexecution:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_ranking:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'ranking/')
    defaults:
      run:
        working-directory: ranking
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v .

  push_snapshot_container_ranking:
    needs: [build_ranking]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ranking
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/ranking:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG


  build_searchitem:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'searchitem/')
    defaults:
      run:
        working-directory: searchitem
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

    - name: Build
      run: go build -v .

  push_snapshot_container_searchitem:
    needs: [build_searchitem]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: searchitem
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/searchitem:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  push_snapshot_container_mongodb:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: mongodb
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/mongodb:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  push_snapshot_container_uam:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: uam
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push container
      run: |
        export IMAGE_TAG="ghcr.io/${{ github.repository }}/uam:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG