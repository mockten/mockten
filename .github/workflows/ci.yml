name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build_ecfront:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'ecfront2/')
    defaults:
      run:
        working-directory: ecfront2
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up Go
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
  
      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

  push_snapshot_container_ecfront:
    needs: [build_ecfront]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ecfront2
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/ecfront:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG


  build_ecpay:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'ecpay/')
    defaults:
      run:
        working-directory: ecpay
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

    - name: Build
      run: go build -v .

    # - name: Test
    #  run: go test -v .


  push_snapshot_container_ecpay:
    needs: [build_ecpay]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ecpay
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    # - name: Get latest version
    #   id: get-latest-version
    #   run: |
    #     export LATEST_VERSION=$(gcloud container images list-tags gcr.io/${{ secrets.GCP_PROJECT_ID }}/ecpay --format='get(tags)' --limit=1)
    #     echo "::set-output name=latest_version::$LATEST_VERSION"

    # - name: Increment patch version
    #   id: increment-patch-version
    #   run: |
    #     version=${{ steps.get-latest-version.outputs.latest_version }}
    #     if [ -z "$version" ]; then
    #       echo "Error: No version number provided."
    #       exit 1
    #     fi
    #     patch_version_exist=$(echo $version | awk -F. '{print $NF}')
    #     export PATCH_VERSION=$(($patch_version_exist + 1))
    #     echo "::set-output name=patch_version::$PATCH_VERSION"

    # - name: Build and push container
    #   run: |
    #     export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/ecpay:v$MAJOR_VERSION.$MINOR_VERSION.${{ steps.increment-patch-version.outputs.patch_version }}"
    #     docker build -t $IMAGE_TAG .
    #     docker push $IMAGE_TAG
    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/ecpay:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG


  build_notification:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'notification/')
    defaults:
      run:
        working-directory: notification
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v .

    # - name: Test
    #  run: go test -v .


  push_snapshot_container_notification:
    needs: [build_notification]
    if: ${{ github.event_name == 'push'  || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: notification
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/notification:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_payexecution:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'payexecution/')
    defaults:
      run:
        working-directory: payexecution
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

  push_snapshot_container_payexecution:
    needs: [build_payexecution]
    if: ${{ github.event_name == 'push'  || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: payexecution
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/payexecution:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  build_ranking:
    runs-on: ubuntu-22.04
    # if: contains(github.event.head_commit.modified, 'ranking/')
    defaults:
      run:
        working-directory: ranking
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v .

    # - name: Test
    #  run: go test -v .

  push_snapshot_container_ranking:
    needs: [build_ranking]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ranking
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/ranking:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG


  build_searchitem:
    runs-on: ubuntu-latest
    # if: contains(github.event.head_commit.modified, 'searchitem/')
    defaults:
      run:
        working-directory: searchitem
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

    - name: Build
      run: go build -v .

    # - name: Test
    #  run: go test -v .

  push_snapshot_container_searchitem:
    needs: [build_searchitem]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: searchitem
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/searchitem:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  push_snapshot_container_mongodb:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: mongodb
    env:
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v1
    - name: GCP Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup GCloud
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: Configure docker to use the gcloud cli
      run: gcloud auth configure-docker --quiet

    - name: Build and push container
      run: |
        export IMAGE_TAG="gcr.io/${{ secrets.GCP_PROJECT_ID }}/mockten/mongodb:latest"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
